// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.2.0
// - protoc             v3.20.1
// source: internal/pkg/internapi/internapi.proto

package internapi

import (
	context "context"

	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// InternAPIClient is the client API for InternAPI service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type InternAPIClient interface {
	NewContent(ctx context.Context, in *NewContentRequest, opts ...grpc.CallOption) (*emptypb.Empty, error)
	InternalListKeys(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*ListKeysResponse, error)
	Query(ctx context.Context, in *QueryRequest, opts ...grpc.CallOption) (*QueryResponse, error)
}

type internAPIClient struct {
	cc grpc.ClientConnInterface
}

func NewInternAPIClient(cc grpc.ClientConnInterface) InternAPIClient {
	return &internAPIClient{cc}
}

func (c *internAPIClient) NewContent(ctx context.Context, in *NewContentRequest, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/internapi.InternAPI/NewContent", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *internAPIClient) InternalListKeys(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*ListKeysResponse, error) {
	out := new(ListKeysResponse)
	err := c.cc.Invoke(ctx, "/internapi.InternAPI/InternalListKeys", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *internAPIClient) Query(ctx context.Context, in *QueryRequest, opts ...grpc.CallOption) (*QueryResponse, error) {
	out := new(QueryResponse)
	err := c.cc.Invoke(ctx, "/internapi.InternAPI/Query", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// InternAPIServer is the server API for InternAPI service.
// All implementations must embed UnimplementedInternAPIServer
// for forward compatibility
type InternAPIServer interface {
	NewContent(context.Context, *NewContentRequest) (*emptypb.Empty, error)
	InternalListKeys(context.Context, *emptypb.Empty) (*ListKeysResponse, error)
	Query(context.Context, *QueryRequest) (*QueryResponse, error)
	mustEmbedUnimplementedInternAPIServer()
}

// UnimplementedInternAPIServer must be embedded to have forward compatible implementations.
type UnimplementedInternAPIServer struct {
}

func (UnimplementedInternAPIServer) NewContent(context.Context, *NewContentRequest) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method NewContent not implemented")
}
func (UnimplementedInternAPIServer) InternalListKeys(context.Context, *emptypb.Empty) (*ListKeysResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method InternalListKeys not implemented")
}
func (UnimplementedInternAPIServer) Query(context.Context, *QueryRequest) (*QueryResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Query not implemented")
}
func (UnimplementedInternAPIServer) mustEmbedUnimplementedInternAPIServer() {}

// UnsafeInternAPIServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to InternAPIServer will
// result in compilation errors.
type UnsafeInternAPIServer interface {
	mustEmbedUnimplementedInternAPIServer()
}

func RegisterInternAPIServer(s grpc.ServiceRegistrar, srv InternAPIServer) {
	s.RegisterService(&InternAPI_ServiceDesc, srv)
}

func _InternAPI_NewContent_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NewContentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(InternAPIServer).NewContent(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/internapi.InternAPI/NewContent",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(InternAPIServer).NewContent(ctx, req.(*NewContentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _InternAPI_InternalListKeys_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(emptypb.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(InternAPIServer).InternalListKeys(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/internapi.InternAPI/InternalListKeys",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(InternAPIServer).InternalListKeys(ctx, req.(*emptypb.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _InternAPI_Query_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(InternAPIServer).Query(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/internapi.InternAPI/Query",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(InternAPIServer).Query(ctx, req.(*QueryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// InternAPI_ServiceDesc is the grpc.ServiceDesc for InternAPI service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var InternAPI_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "internapi.InternAPI",
	HandlerType: (*InternAPIServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "NewContent",
			Handler:    _InternAPI_NewContent_Handler,
		},
		{
			MethodName: "InternalListKeys",
			Handler:    _InternAPI_InternalListKeys_Handler,
		},
		{
			MethodName: "Query",
			Handler:    _InternAPI_Query_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "internal/pkg/internapi/internapi.proto",
}
